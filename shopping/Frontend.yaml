apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: shopping-app
  labels:
    app: frontend
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      containers:
        - name: frontend
          image: nginx:alpine
          command: ["/bin/sh", "-c"]
          args:
            - |
              cp /tmp/nginx-conf/default.conf /etc/nginx/conf.d/default.conf && \
              envsubst '$CATALOG_SERVICE_URL,$CART_SERVICE_URL,$ORDER_SERVICE_URL' < /etc/nginx/conf.d/default.conf > /etc/nginx/conf.d/default.conf.tmp && \
              mv /etc/nginx/conf.d/default.conf.tmp /etc/nginx/conf.d/default.conf && \
              nginx -g 'daemon off;'
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          ports:
            - containerPort: 80
              name: http
            - containerPort: 8080
              name: metrics
          volumeMounts:
            - name: frontend-config
              mountPath: /tmp/nginx-conf
            - name: frontend-html
              mountPath: /usr/share/nginx/html
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: CATALOG_SERVICE_URL
              value: "http://catalog-service:8080"
            - name: CART_SERVICE_URL
              value: "http://cart-service:8080"
            - name: ORDER_SERVICE_URL
              value: "http://order-service:8080"
            - name: OTEL_SERVICE_NAME
              value: "frontend"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://otel-collector:4317"
      volumes:
        - name: frontend-config
          configMap:
            name: frontend-config
        - name: frontend-html
          configMap:
            name: frontend-config
            items:
              - key: index.html
                path: index.html
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: shopping-app
spec:
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 80
      name: http
    - port: 8080
      targetPort: 8080
      name: metrics
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  namespace: shopping-app
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/tags: Environment=dev,Team=shopping-team
    alb.ingress.kubernetes.io/healthcheck-path: /health
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80